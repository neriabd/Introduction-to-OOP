neriyabd
206698581

1.

I chose to implement the trees package using the following classes:
• Flora - A class tasked with generating trees within a defined range.

• Tree - The class which responsible for the creation of a tree, and it's components:
   Trunk, Leafs, Fruits.

• Trunk - Handles the creation of a trunk at a specified location and manages its interactions with
          other game objects.
          This class inherits from the GameObject class and implements the Observer interface.

• Leaf - Responsible for placing a leaf at a given position and managing its behavior and
         interactions according to the game's logic and player's actions.
         This class inherits from the GameObject class and implements the Observer interface.

• Fruit - Manages the creation of a fruit at a designated spot and managing its behavior and
          interactions according to the game's logic and player's actions.
          This class inherits from the GameObject class and implements the Observer interface.

2.

The relationships between the following classes are as follows:

- Flora
  - Dependency: Tree

- Tree
  - Composition: Trunk, Leaf, Fruit

- Fruit
  - Dependency: GameObject, Observer

- Leaf
  - Dependency: GameObject, Observer

- Trunk
  - Dependency: GameObject, Observer

3.

implemented the Observer design pattern using a Subject class and an Observer interface,
drawing on concepts of implementation from Lab 6.
In this setup, the Subject class manages a collection of observers and notifies them when specific
actions need to be performed (when the avatar jumps in our case).
The Fruit, Leaf, and Trunk classes function as observers, each executing distinct behaviors
in response to the Avatar’s actions using their update method in gameObjects.
To efficiently manage these observers, I chose to store them in a hash set, which allows for
straightforward access and removal when they move out of the screen in the infinite world approach
instead of iterating through a list of observers and remove them like that.
